using System; using Microsoft.SqlServer.Management.Smo; using Microsoft.SqlServer.Management.Common; using Backup_Db_ATD.Models; using System.Configuration; using System.IO;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.Linq;
using System.Globalization;

namespace Backup_Db_ATD.Repositorys {     public class Repo_SQL:Repo     {         /// <summary>         ///          /// </summary>         /// <param name="server_sql">Địa chỉ host sqlserver</param>         /// <param name="username">Tài khoản</param>         /// <param name="password">Mật khẩu</param>         /// <param name="state">Trạng thái backup full hoặc log (Full: *.bak, Log: *.trn)</param>         /// <param name="database_name">Tên của database cần backup</param>         /// <param name="path">Đường dẫn chứ file backup (Lưu ý dấu \ ở cuối vd: E:\Database\duoclv\)</param>         /// <param name="filename">File backup (tên có chứa đuôi vd: backup.bak)</param>         public void Backup(string server_sql, string username, string password, string state, string database_name, string path, string filename)         {             var cultureInfo = CultureInfo.CreateSpecificCulture("vi-VN");              try             {                 string v_duongdan_ftp = ConfigurationManager.AppSettings["DuongDanFTP"].ToString();                 #region Backup                 var _ngaybatdau = DateTime.Now.ToString("dd/MM/yyyy HH:mm");                 var file_extention = state == "full" ? ".bak" : ".trn";                 Server mySqlserver = new Server(server_sql);                 mySqlserver.ConnectionContext.LoginSecure = false;                 mySqlserver.ConnectionContext.Login = username;                 mySqlserver.ConnectionContext.Password = password;                 mySqlserver.ConnectionContext.Connect();                  Backup backupDb = new Backup();                 /* Specify whether you want to back up database or files or log */                 backupDb.Action = state == "full" ? BackupActionType.Database : BackupActionType.Log;                 /* Specify the name of the database to back up */                 backupDb.Database = database_name;                 /* You can take backup on several media type (disk or tape), here I am                  * using File type and storing backup on the file system */                 backupDb.Devices.AddDevice(path + filename + file_extention, DeviceType.File);                  backupDb.BackupSetName = "SPCIT AUTO BACKUP " + (state == "full" ? " FULL" : "LOG");                 backupDb.BackupSetDescription = "duoclv.it@evnspc.vn";                 /* You can specify the expiration date for your backup data                  * after that date backup data would not be relevant */                 backupDb.ExpirationDate = DateTime.Today.AddDays(10);                  backupDb.Initialize = false;                  /* Wiring up events for progress monitoring */                 backupDb.PercentComplete += CompletionStatusInPercent;                 backupDb.Complete += Backup_Completed;                  /* SqlBackup method starts to take back up                  * You can also use SqlBackupAsync method to perform the backup                   * operation asynchronously */                 backupDb.SqlBackup(mySqlserver);                 var _ngayketthuc = DateTime.Now.ToString("dd/MM/yyyy HH:mm");                 var model = new JSON_FILE_BACKUP()                 {                     TenFile = filename + file_extention,                     NgayBatDau = _ngaybatdau,                     NgayKetThuc = _ngayketthuc                 };                 #endregion                  Ghi_Log_Backup(path, model);                  var date = DateTime.Now;                 if (date.Day == 26) //Ngày 26 ghi file word dung lượng M_QT_22.21                 {                     string v_duongdan_csdl = ConfigurationManager.AppSettings["DuongDanDatabase"].ToString();                     MSSQL_Ghi_Log_DungLuong(database_name, path, v_duongdan_csdl);                 }                  if(date.Day == 1) //Ngày 1 hằng tháng tạo 2 file BM_QT_22.04, M_QT_22.12                 {                     //đọc file log                     var file_json_path = path + "log_backup.json";                     var list_data = JsonConvert.DeserializeObject<List<JSON_FILE_BACKUP>>(File.ReadAllText(file_json_path)) ?? new List<JSON_FILE_BACKUP>();                      //Lấy ra thời gian cần xuất                     //ví dụ: ngày 01/09/2019 => ngày dữ liệu sẽ là 01/08/201 - 31/08/2019                     var start_date = DateTime.ParseExact("01/" + DateTime.Now.AddMonths(-1).ToString("MM") + "/" + DateTime.Now.AddMonths(-1).ToString("yyyy"), "dd/MM/yyyy", cultureInfo);
                    var end_date = DateTime.ParseExact("01/" + DateTime.Now.ToString("MM") + "/" + DateTime.Now.ToString("yyyy"), "dd/MM/yyyy", cultureInfo);
                    list_data = list_data.Where(s=> DateTime.ParseExact(s.NgayTao, "dd/MM/yyyy HH:mm", cultureInfo) >= start_date && DateTime.ParseExact(s.NgayTao, "dd/MM/yyyy HH:mm", cultureInfo) < end_date).OrderBy(o => DateTime.ParseExact(o.NgayTao, "dd/MM/yyyy HH:mm", cultureInfo)).ToList();

                    MSSQL_Ghi_File_BM_QT_22_04(list_data, database_name);
                    MSSQL_Ghi_File_BM_QT_22_12(list_data, v_duongdan_ftp, database_name);
                }                  //Upload to FTP                 Upload_FTP(path, file_extention, v_duongdan_ftp); //file_extention tuỳ thuộc vào ngày backup vì thứ 6 mới backup full             }             catch(Exception ex)             {                 throw ex;             }         }          private void CompletionStatusInPercent(object sender, PercentCompleteEventArgs args)         {             Console.Clear();             Console.WriteLine("Dang xu ly: {0}%.", args.Percent);         }         private void Backup_Completed(object sender, ServerMessageEventArgs args)         {             Console.WriteLine("Da sao luu xong.");             Console.WriteLine(args.Error.Message);         }     } } 